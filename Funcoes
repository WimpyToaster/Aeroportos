#include <stdio.h>
#include <string.h>

#define ABERTO 1
#define FECHADO 0
#define AERO_MAX 1000

int total_aeroportos = 0;

/*vetor de estruturas*/
/*sorter*/

typedef struct{

	int cap_max;
	char id[4];
	int estado;
	int incoming;
	int outgoing;

}aeroporto;

aeroporto generico[AERO_MAX];


typedef struct{

	aeroporto partida;
	aeroporto destino;

}voo;

void cria_aeroporto(int cap, char id[]);
void alt_cap_aero(char id[], int alt);


int main()
{
    int x;
    char y[4];
    scanf("%d %s", &x, y);
    cria_aeroporto(x,y);
    scanf("%s %d", y, &x);
    alt_cap_aero(y,x);
    printf("%d %s\n", generico[0].cap_max, generico[0].id);
	return 0;

}



void cria_aeroporto(int cap, char id[])
{	
    generico[total_aeroportos].cap_max = cap;
    strcpy(generico[total_aeroportos].id, id);
    generico[total_aeroportos].estado = ABERTO;
	
	total_aeroportos++;
}

void alt_cap_aero(char id[], int alt)
{
	int i = 0;

	for (; i <= total_aeroportos; i++)
	{
		if (i==total_aeroportos)
		{
			printf("Capacidade de %s inalterado.\n", id);
		}
		else if (strcmp(generico[i].id, id)==0)
		{
			generico[i].cap_max += alt;
			break;
		}
	}
}

void add_in_out(char id1[], char id2[])
{
	/*temos de fazer mais eficiente*/
	int i = 0;
	int v = 0;
	
	for(; i < total_aeroportos; i++)
	{
		if(strcmp(generico[i].id, id1) == 0)
		{
			v = i;
		}
	}

	for (i = 0; i < total_aeroportos ; ++i)
	{
		/* code */
		if (strcmp(generico[v].id, id2) == 0)
		{
			/*NAO ACABADA*/
		}
	}

}
